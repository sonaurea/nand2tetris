// Bootstrap code
// Stack Init
@256
D=A
@SP
M=D
// call Sys.init
@Sys.init$ret.0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(Sys.init$ret.0)
(Class1.set)

// Push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// Pop static 0
@SP
AM=M-1
D=M
@Class1.0
M=D
// Push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// Pop static 1
@SP
AM=M-1
D=M
@Class1.1
M=D
// Push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@frame
M=D
@5
A=D-A
D=M
@RET
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@frame
AM=M-1
D=M
@THAT
M=D
@frame
AM=M-1
D=M
@THIS
M=D
@frame
AM=M-1
D=M
@ARG
M=D
@frame
AM=M-1
D=M
@LCL
M=D
@RET
A=M
0;JMP

(Class1.get)

// Push static 0
@Class1.0
D=M
@SP
A=M
M=D
@SP
M=M+1
// Push static 1
@Class1.1
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub Op
@SP
AM=M-1
D=M
@SP
A=M-1
M=M-D
// return
@LCL
D=M
@frame
M=D
@5
A=D-A
D=M
@RET
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@frame
AM=M-1
D=M
@THAT
M=D
@frame
AM=M-1
D=M
@THIS
M=D
@frame
AM=M-1
D=M
@ARG
M=D
@frame
AM=M-1
D=M
@LCL
M=D
@RET
A=M
0;JMP

(Class2.set)

// Push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// Pop static 0
@SP
AM=M-1
D=M
@Class2.0
M=D
// Push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// Pop static 1
@SP
AM=M-1
D=M
@Class2.1
M=D
// Push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@frame
M=D
@5
A=D-A
D=M
@RET
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@frame
AM=M-1
D=M
@THAT
M=D
@frame
AM=M-1
D=M
@THIS
M=D
@frame
AM=M-1
D=M
@ARG
M=D
@frame
AM=M-1
D=M
@LCL
M=D
@RET
A=M
0;JMP

(Class2.get)

// Push static 0
@Class2.0
D=M
@SP
A=M
M=D
@SP
M=M+1
// Push static 1
@Class2.1
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub Op
@SP
AM=M-1
D=M
@SP
A=M-1
M=M-D
// return
@LCL
D=M
@frame
M=D
@5
A=D-A
D=M
@RET
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@frame
AM=M-1
D=M
@THAT
M=D
@frame
AM=M-1
D=M
@THIS
M=D
@frame
AM=M-1
D=M
@ARG
M=D
@frame
AM=M-1
D=M
@LCL
M=D
@RET
A=M
0;JMP

(Sys.init)

// Push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
// Push constant 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
// call Class1.set
@Class1.set$ret.1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@7
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.set
0;JMP
(Class1.set$ret.1)
// Pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// Push constant 23
@23
D=A
@SP
A=M
M=D
@SP
M=M+1
// Push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
// call Class2.set
@Class2.set$ret.2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@7
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.set
0;JMP
(Class2.set$ret.2)
// Pop temp 0
@SP
AM=M-1
D=M
@5
M=D
// call Class1.get
@Class1.get$ret.3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.get
0;JMP
(Class1.get$ret.3)
// call Class2.get
@Class2.get$ret.4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.get
0;JMP
(Class2.get$ret.4)
(END)
// goto END
@END
0;JMP
